// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model Organization {
  id          String     @id @default(cuid())
  name        String     @unique
  description String
  User        User[]
  Rfp         Rfp[]
  Proposal    Proposal[]  
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  //createdAt DateTime @default(now())
  //updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model User {
  id       String       @id @default(cuid())
  name     String?
  email    String       @unique
  password String
  emailVerified DateTime?
  org      Organization @relation(fields: [org_id], references: [id])
  org_id   String
  role     UserRole @default(USER)
  Rfp      Rfp[]
  Proposal Proposal[]
  accounts      Account[]
}

model Rfp {
  id           String       @id @default(cuid())
  user         User         @relation(fields: [user_id], references: [id])
  user_id      String
  org          Organization @relation(fields: [org_id], references: [id])
  org_id       String
  name         String?
  date_created DateTime     @default(now())
  amount       Int?
  status       String?
  Proposal     Proposal[]
}

model Proposal {
  id           String       @id @default(cuid())
  user         User         @relation(fields: [user_id], references: [id])
  user_id      String
  org          Organization @relation(fields: [org_id], references: [id])
  org_id       String
  rfp          Rfp          @relation(fields: [rfp_id], references: [id])
  rfp_id       String
  name         String?
  date_created DateTime     @default(now())
  amount       Int?
  status       String?
}
